(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{588:function(t,a,s){"use strict";s.r(a);var e=s(30),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"jquery中封装ajax请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jquery中封装ajax请求"}},[t._v("#")]),t._v(" jQuery中封装ajax请求")]),t._v(" "),s("h2",{attrs:{id:"get-get请求方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-get请求方式"}},[t._v("#")]),t._v(" $.get()  get请求方式")]),t._v(" "),s("p",[t._v("有4个参数, url地址是必填参数, 其他参数都是选填参数")]),t._v(" "),s("p",[t._v("参数的形式是对象形式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.get({\n    url : 地址(必填)\n    data : 携带的参数 对象形式\n    dataType : 期望的数据类型,如果为json,会将后端返回的json串,自动解析\n    success : function(){} 请求成功时执行的函数\n})\n")])])]),s("h2",{attrs:{id:"post-post请求方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post-post请求方式"}},[t._v("#")]),t._v(" $.post()  post请求方式")]),t._v(" "),s("p",[t._v("有4个参数, url地址是必填参数, 其他参数都是选填参数")]),t._v(" "),s("p",[t._v("参数的形式是对象形式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.post({\n    url : 地址(必填)\n    data : 携带的参数 对象形式\n    dataType : 期望的数据类型,如果为json,会将后端返回的json串,自动解析\n    success : function(){} 请求成功时执行的函数\n})\n")])])]),s("h2",{attrs:{id:"ajax-综合方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax-综合方式"}},[t._v("#")]),t._v(" $.ajax()  综合方式")]),t._v(" "),s("p",[t._v("常规get,post请求(不是跨域), 常用参数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.ajax({\n    常用 :\n    url : 地址;\n    type / method : 请求方式 默认值是get方式\n    data : { } 传参参数,必须是对象形式\n    dataType : json, 设定为json,会自动解析反应提中的json串\n    success : function(){} 请求成功执行的函数 \n\n    不常用:\n    async : 设定是否异步,默认值是true,异步执行ajax请求\n    error : function(){} 请求错误时执行的函数, 请求成功时不会执行\n    timeout : 设定时间,单位毫秒（必须是异步执行）, 如果请求时间超过设定的时间,认为是请求失败\n    cache : 设定是否缓存请求结果, 默认值是 true,缓存请求结果必须是get方式,这个设定才起作用post方式不会缓存,设定也没有效果\n    context : 指定执行函数中 this的指向\n})\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);