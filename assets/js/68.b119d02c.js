(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{486:function(e,n,t){"use strict";t.r(n);var a=t(30),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"springboot-jar包安装成windows服务-winsw"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springboot-jar包安装成windows服务-winsw"}},[e._v("#")]),e._v(" springboot jar包安装成windows服务（winsw）")]),e._v(" "),t("h2",{attrs:{id:"下载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[e._v("#")]),e._v(" 下载")]),e._v(" "),t("p",[e._v("下载exe "),t("a",{attrs:{href:"https://github.com/winsw/winsw",target:"_blank",rel:"noopener noreferrer"}},[e._v("winsw"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"服务安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务安装"}},[e._v("#")]),e._v(" 服务安装")]),e._v(" "),t("p",[e._v("新建一个目录autService")]),e._v(" "),t("p",[e._v("在目录里面新建一个autService.xml,同时把winsw-2.3.0-bin.exe重命名陈autService.exe")]),e._v(" "),t("p",[e._v("必须这么做，否则无法安装启动服务。")]),e._v(" "),t("p",[e._v("编辑autService.xml文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<?xml version="1.0" encoding="utf-8" ?>\n<service>\n\t\x3c!-- 服务id（必须唯一） --\x3e\n    <id>nongyeServer</id> \x3c!-- must be unique --\x3e\n\t\x3c!-- 显示的服务名 --\x3e\n    <name>nongyeServer</name>\n\t\x3c!-- 显示的服务描述 --\x3e\n    <description>服务描述</description>\n    <executable>javaw</executable>\n\t\x3c!-- 替换自己的jar --\x3e\n    <arguments>-jar "%BASE%\\nongye.jar"</arguments>\n    <logpath>%BASE%\\log</logpath>\n    <log mode="roll-by-time">\n    <pattern>yyyy-MM-dd</pattern>   \n    </log>\n</service>\n\n')])])]),t("p",[t("strong",[e._v("（注：此处注意，如果用的是文本编辑器修改，务必将编码格式换成Unicode编码）")])]),e._v(" "),t("p",[e._v("用管理方式启动控制台（cmd）,切换到该文件夹内")]),e._v(" "),t("p",[e._v("安装服务命令")]),e._v(" "),t("p",[t("code",[e._v("autService.exe install")])]),e._v(" "),t("p",[e._v("卸载服务命令")]),e._v(" "),t("p",[t("code",[e._v("autService.exe uninstall")])]),e._v(" "),t("p",[e._v("安装完，在系统服务里可以看到已经安装的服务")]),e._v(" "),t("h2",{attrs:{id:"winsw配置文件参数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#winsw配置文件参数详解"}},[e._v("#")]),e._v(" winsw配置文件参数详解")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('id：指定Windows内部用于标识服务的id。在系统中安装的所有服务中必须是唯一的，并且应完全由字母数字字符组成。\n\nexecutable：该元素指定要启动的可执行文件。它可以是绝对路径，也可以只指定可执行文件名称并从PATH中搜索\n\narguments：该标签指定的参数传递给可执行文件，多个参数以空格隔开\n\nname：服务的简短显示名称，可以包含空格和其他字符。在系统的所有服务中也必须是唯一的。\n\ndescription：对服务的完整人类可读描述。\n\nstartmode：该元素指定Windows服务的启动模式。它可以是以下值之一\n    Boot：设备驱动程序由操作系统加载程序启动。此值仅对驱动程序服务有效。\n    System：设备驱动程序由操作系统初始化过程启动。此值仅对驱动程序服务有效。\n    Automatic：自动，服务控制管理器将在系统启动期间自动启动服务。\n    Manual：手动，当进程调用StartService方法时，由服务控制管理器启动的服务。\n    Disabled：禁用，无法再启动的服务。\n    默认值为Automatic\n\ndelayedAutoStart：是否启用延迟启动模式(true或者false，需要startmode设置为Automatic)\n\ndepend：指定此服务依赖的其他服务的ID，仅在依赖的服务运行时此服务才能运行，可以使用多个标签指定多个依赖\n\nlogpath：指定在其中创建日志文件的目录，默认为配置文件所在的目录。\n\nlog：该标签的mode属性指定从启动过程中捕获stdout和stderr的几种不同方法：\n    append：追加模式\n    reset：重设模式，每次服务启动时，旧的日志文件都会被截断\n    none：不生成任何日志文件\n    roll-by-size：按日志文件大小滚动，日志大于指定大小后重新生成新的日志文件进行写入，日志文件名最后以阿拉伯数字区分\n        嵌套sizeThreshold标签指定日志文件多大时生成新日志文件，单位为KB\n        嵌套keepFiles标签指定最多要保留的日志文件数\n    roll-by-time：按日志文件时间段滚动\n        必须嵌套pattern标签指定日志文件名的时间标记格式，如yyyyMMdd HH:mm\n    roll-by-size-time：按日志文件大小和时间模式滚动\n        嵌套sizeThreshold标签指定日志文件多大时生成新日志文件，单位为KB\n        嵌套pattern标签指定当日志文件文件名最后的区分字段格式(时间格式，如yyyyMMdd HH:mm)\n        嵌套autoRollAtTime标签指定每天在指定时间进行日志滚动。如00:00:00表示每天凌晨进行日志滚动\n\nstopexecutable：指定当请求停止服务时启动另一个进程的可执行文件，不提供默认使用executable指定的文件\n\nstopargument：当请求停止服务时启动另一个进程时的参数\n\nstopparentprocessfirst：是否在停止子进程之前终止父进程，默认true\n\nwaithint：指定多长时间内服务应该对SetServiceStatus函数进行下一次调用，否则会被标记为无响应，默认"15 sec"\n\nsleeptime：服务两次调用SetServiceStatus函数的间隔时间，默认"1 sec"\n\nprestart：预启动，服务启动时和主进程启动之前，将执行预启动命令\npoststart：启动后，服务启动时和主进程启动后，将执行启动后命令\nprestop：停止前，服务停止时和主进程停止之前，执行停止前命令\n以上三个标签可以内部嵌套executable，arguments，stdoutPath，stderrPath等\n\npreshutdown：是否关机前进行阻止立即关机，当启动时服务有更多时间停止\n\npreshutdownTimeout：关机前超时，默认值为"3 min"\n\nstoptimeout：停止超时时间\n    当请求停止服务时，尝试向控制台应用程序发送Ctrl + C信号，或向Windows应用程序发布关闭消息，然后等待指定时间以使进程自行正常退出。\n    如果超时到期或无法发送信号或消息，则会立即终止服务，默认值为"15sec"。\n\nenv：为子进程设置环境变量，可以使用多次从而设置多个变量\n    单标签，听过name和value两个属性设置环境变的值\n\ninteractive：是否允许该服务与桌面进行交互\n\nbeeponshutdown：是否允许在服务关闭时发出简单的提示音，调试功能，某些系统或硬件不支持\n\ndownload：服务包装程序从指定URL下载到本地。在启动服务时且启动服务程序之前运行\n    from属性指定要下载文件的的url地址\n    to属性指定下载到本地的文件名\n    proxy属性指定代理，格式为"http://[USERNAME:PASSWORD@]HOST:PORT/"\n    auth：身份验证，默认值为none(不验证)，为basic则表示使用基本身份验证\n        当使用基本身份验证时需要额外的附加属性，user指定用户名，password指定密码\n    failOnError：下载失败是否继续启动服务，默认true\n\nonfailure：指定服务启动失败时的行为\n    action属性指定行为，可选的值有restart(重启服务)，reboot(重启系统)和none\n    delay属性指定服务启动失败多久后执行操作，默认为0。\n    多个onfailure按失败顺序依次执行，当失败实数超过onfailure标签数量时，重复执行最后一个onfailure标签指定的操作。\n\nresetfailure：重置故障计数的时间，如该标签值为"1 hour"表示服务持续正常运行超过一小时则故障计数会重置为0。\n\nserviceaccount：指定服务运行时使用的账户，默认使用LocalSystem内置账户\n    嵌套username标签指定用户名(格式DomainName\\UserName或者UserName@DomainName)，当前内置域使用".\\UserName"\n        显示的使用内置账户(内置账户没有密码，即使提供密码也会被忽略)的几个值："LocalSystem"，"NT AUTHORITY\\LocalService"，"NT AUTHORITY\\NetworkService"，，\n    嵌套password指定用户的密码\n    嵌套allowservicelogon表示是否自动为指定帐户设置“允许作为服务登录”权限\n    嵌套prompt表示提示输入用户名和密码，该值格式为<prompt>dialog|console</prompt>\n        dialog：使用对话框提示\n        console：在控制台上提示\n\nworkingdirectory：指定服务运行时的工作目录\n\nautoRefresh：服务启动，停止，重启，测试(test)时是否自动刷新服务属性\n')])])])])}),[],!1,null,null,null);n.default=r.exports}}]);