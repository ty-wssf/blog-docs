(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{526:function(a,t,e){"use strict";e.r(t);var r=e(30),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"核心接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心接口"}},[a._v("#")]),a._v(" 核心接口")]),a._v(" "),e("h2",{attrs:{id:"aware回调接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aware回调接口"}},[a._v("#")]),a._v(" Aware回调接口")]),a._v(" "),e("h3",{attrs:{id:"beanclassloaderaware回调接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beanclassloaderaware回调接口"}},[a._v("#")]),a._v(" BeanClassLoaderAware回调接口")]),a._v(" "),e("p",[a._v("BeanClassLoaderAware回调接口可让受管Bean本身知道它是由哪一类装载器负责装载。")]),a._v(" "),e("p",[a._v("这一回调接口的定义如下。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("public interface BeanClassLoaderAware extends Aware {\n    void setBeanClassLoader(ClassLoader var1);\n}\n")])])]),e("h3",{attrs:{id:"importaware回调接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#importaware回调接口"}},[a._v("#")]),a._v(" ImportAware回调接口")]),a._v(" "),e("p",[e("code",[a._v("ImportAware")]),a._v("接口是需要和"),e("code",[a._v("@Import")]),a._v("一起使用的。在"),e("code",[a._v("@Import")]),a._v("作为元注解使用时，通过"),e("code",[a._v("@Import")]),a._v("导入的配置类如果实现了"),e("code",[a._v("ImportAware")]),a._v("接口就可以获取到导入该配置类接口的数据配置。有点绕，我们直接上代码。")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ublic class AwareBean implements  ImportAware{\n\n    @Override\n    public void setImportMetadata(AnnotationMetadata importMetadata) {\n        //这个方法就是要拿到注解的值\n        MergedAnnotations annotations = importMetadata.getAnnotations();\n    }\n\n    }\n\n@Component\n@Import(AwareBean.class)\n@Async\npublic class AutowiredConstructorBean {\n\n}\n")])])]),e("p",[e("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master//img/v2-ad9858c95d14769f1044363dd289b0d3_1440w.jpg",alt:"img"}})]),a._v(" "),e("p",[a._v("源码分析：")]),a._v(" "),e("p",[a._v("在依赖注入后，调用initializeBean")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master//img/v2-872b9ab2d0fc0e04727623031ec2a6a4_1440w.jpg",alt:"img"}})]),a._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master//img/v2-17be94c1c3cfe4c5ca9277ae5bf3604c_1440w.jpg",alt:"img"}})]),a._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master//img/v2-2ae83b2d46cac160454f5c695773195b_1440w.jpg",alt:"img"}})]),a._v(" "),e("p",[a._v("BeanPostProcessor有多个实现类，由于该类实现了ImportAware接口，所以调到"),e("strong",[a._v("ImportAwareBeanPostProcessor，在")]),a._v("postProcessBeforeInitialization方法中完成对注解的赋值")]),a._v(" "),e("p",[e("strong",[e("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master//img/v2-7088e24dd1faf11f19eb9b34b1eed97b_1440w.jpg",alt:"img"}})])]),a._v(" "),e("p",[a._v("setImportMetadata()实际上是调用"),e("strong",[a._v("AwareBean的")]),a._v("setImportMetadata方法")])])}),[],!1,null,null,null);t.default=s.exports}}]);