(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{492:function(t,e,a){"use strict";a.r(e);var o=a(30),r=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"spring-boot初始化数据库脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot初始化数据库脚本"}},[t._v("#")]),t._v(" Spring Boot初始化数据库脚本")]),t._v(" "),a("p",[t._v("我们在做测试的时候经常需要初始化导入一些数据，如何来处理呢？会有两种选择，一种是使用 Jpa，另外一种是 Spring JDBC 。两种方式各有区别下面来详细介绍。")]),t._v(" "),a("p",[a("strong",[t._v("使用 Jpa")])]),t._v(" "),a("p",[t._v("在使用"),a("code",[t._v("spring boot jpa")]),t._v("的情况下设置"),a("code",[t._v("spring.jpa.hibernate.ddl-auto")]),t._v("的属性设置为 "),a("code",[t._v("create")]),t._v(" or "),a("code",[t._v("create-drop")]),t._v("的时候，Spring Boot 启动时默认会扫描 classpath 下面（项目中一般是 resources 目录）是否有"),a("code",[t._v("import.sql")]),t._v("，如果有机会执行"),a("code",[t._v("import.sql")]),t._v("脚本。")]),t._v(" "),a("p",[a("strong",[t._v("使用 Spring JDBC")])]),t._v(" "),a("p",[t._v("使用 Spring JDBC 需要在配置文件中添加以下配置")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("spring:\n    datasource:\n        schema: classpath:db/schema.sql\n        data: classpath:db/data.sql\n      sql-script-encoding: utf-8\n    jpa:\n      hibernate:\n        ddl-auto: none\n")])])]),a("ul",[a("li",[t._v("schema ：脚本中创建表的语句")]),t._v(" "),a("li",[t._v("data ：脚本中初始化数据的预计")]),t._v(" "),a("li",[t._v("sql-script-encoding：设置脚本的编码")])]),t._v(" "),a("p",[t._v("Spring Boot 项目启动的时候会自动执行脚本。")]),t._v(" "),a("p",[a("strong",[t._v("ddl-auto 四个值的解释")])]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。")]),t._v(" "),a("li",[t._v("create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。")]),t._v(" "),a("li",[t._v("update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。")]),t._v(" "),a("li",[t._v("validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。 5、 none : 什么都不做。")])])]),t._v(" "),a("p",[a("strong",[t._v("不同点")])]),t._v(" "),a("p",[t._v("第一种方式启动的时候 Jpa 会自动创建表，import.sql 只负责创建表单后的初始化数据。第二种方式启动的时候不会创建表，需要在初始化脚本中判断表是否存在，再初始化脚本的步骤。")]),t._v(" "),a("blockquote",[a("p",[t._v("在生产中，这两种模式都建议慎用！")])])])}),[],!1,null,null,null);e.default=r.exports}}]);