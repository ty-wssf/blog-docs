(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{489:function(t,s,a){"use strict";a.r(s);var e=a(30),o=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"github-actions-入门教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-actions-入门教程"}},[t._v("#")]),t._v(" GitHub Actions 入门教程")]),t._v(" "),a("h2",{attrs:{id:"github-actions-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-actions-是什么"}},[t._v("#")]),t._v(" GitHub Actions 是什么？")]),t._v(" "),a("p",[t._v("大家知道，持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。")]),t._v(" "),a("p",[t._v("很多操作在不同项目里面是类似的，完全可以共享。GitHub 注意到了这一点，想出了一个很妙的点子，允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。")]),t._v(" "),a("p",[t._v("如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。")]),t._v(" "),a("p",[t._v("GitHub 做了一个"),a("a",{attrs:{href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方市场"),a("OutboundLink")],1),t._v("，可以搜索到他人提交的 actions。另外，还有一个 "),a("a",{attrs:{href:"https://github.com/sdras/awesome-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("awesome actions"),a("OutboundLink")],1),t._v(" 的仓库，也可以找到不少 action。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master/img/bg2019091105.jpg",alt:"img"}})]),t._v(" "),a("p",[t._v("上面说了，每个 action 就是一个独立脚本，因此可以做成代码仓库，使用"),a("code",[t._v("userName/repoName")]),t._v("的语法引用 action。比如，"),a("code",[t._v("actions/setup-node")]),t._v("就表示"),a("code",[t._v("github.com/actions/setup-node")]),t._v("这个"),a("a",{attrs:{href:"https://github.com/actions/setup-node",target:"_blank",rel:"noopener noreferrer"}},[t._v("仓库"),a("OutboundLink")],1),t._v("，它代表一个 action，作用是安装 Node.js。事实上，GitHub 官方的 actions 都放在 "),a("a",{attrs:{href:"https://github.com/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("github.com/actions"),a("OutboundLink")],1),t._v(" 里面。")]),t._v(" "),a("p",[t._v("既然 actions 是代码仓库，当然就有版本的概念，用户可以引用某个具体版本的 action。下面都是合法的 action 引用，用的就是 Git 的指针概念，详见"),a("a",{attrs:{href:"https://help.github.com/en/articles/about-actions#versioning-your-action",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("actions/setup-node@74bc508 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指向一个 commit")]),t._v("\nactions/setup-node@v1.0    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指向一个标签")]),t._v("\nactions/setup-node@master  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指向一个分支")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v("GitHub Actions 有一些自己的术语。")]),t._v(" "),a("p",[t._v("（1）"),a("strong",[t._v("workflow")]),t._v(" （工作流程）：持续集成一次运行的过程，就是一个 workflow。")]),t._v(" "),a("p",[t._v("（2）"),a("strong",[t._v("job")]),t._v(" （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。")]),t._v(" "),a("p",[t._v("（3）"),a("strong",[t._v("step")]),t._v("（步骤）：每个 job 由多个 step 构成，一步步完成。")]),t._v(" "),a("p",[t._v("（4）"),a("strong",[t._v("action")]),t._v(" （动作）：每个 step 可以依次执行一个或多个命令（action）。")]),t._v(" "),a("h1",{attrs:{id:"workflow-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#workflow-文件"}},[t._v("#")]),t._v(" workflow 文件")]),t._v(" "),a("p",[t._v("GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的"),a("code",[t._v(".github/workflows")]),t._v("目录。")]),t._v(" "),a("p",[t._v("workflow 文件采用 "),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/07/yaml.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("YAML 格式"),a("OutboundLink")],1),t._v("，文件名可以任意取，但是后缀名统一为"),a("code",[t._v(".yml")]),t._v("，比如"),a("code",[t._v("foo.yml")]),t._v("。一个库可以有多个 workflow 文件。GitHub 只要发现"),a("code",[t._v(".github/workflows")]),t._v("目录里面有"),a("code",[t._v(".yml")]),t._v("文件，就会自动运行该文件。")]),t._v(" "),a("p",[t._v("workflow 文件的配置字段非常多，详见"),a("a",{attrs:{href:"https://help.github.com/en/articles/workflow-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("。下面是一些基本字段。")]),t._v(" "),a("p",[a("strong",[t._v("（1）"),a("code",[t._v("name")])])]),t._v(" "),a("p",[a("code",[t._v("name")]),t._v("字段是 workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("name: GitHub Actions Demo\n")])])])]),t._v(" "),a("p",[a("strong",[t._v("（2）"),a("code",[t._v("on")])])]),t._v(" "),a("p",[a("code",[t._v("on")]),t._v("字段指定触发 workflow 的条件，通常是某些事件。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("on: push\n")])])])]),t._v(" "),a("p",[t._v("上面代码指定，"),a("code",[t._v("push")]),t._v("事件触发 workflow。")]),t._v(" "),a("p",[a("code",[t._v("on")]),t._v("字段也可以是事件的数组。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("on: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push, pull_request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),a("p",[t._v("上面代码指定，"),a("code",[t._v("push")]),t._v("事件或"),a("code",[t._v("pull_request")]),t._v("事件都可以触发 workflow。")]),t._v(" "),a("p",[t._v("完整的事件列表，请查看"),a("a",{attrs:{href:"https://help.github.com/en/articles/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("。除了代码库事件，GitHub Actions 也支持外部事件触发，或者定时运行。")]),t._v(" "),a("p",[a("strong",[t._v("（3）"),a("code",[t._v("on.<push|pull_request>.<tags|branches>")])])]),t._v(" "),a("p",[t._v("指定触发事件时，可以限定分支或标签。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("on:\n  push:\n    branches:    \n      - master\n")])])])]),t._v(" "),a("p",[t._v("上面代码指定，只有"),a("code",[t._v("master")]),t._v("分支发生"),a("code",[t._v("push")]),t._v("事件时，才会触发 workflow。")]),t._v(" "),a("p",[a("strong",[t._v("（4）"),a("code",[t._v("jobs.<job_id>.name")])])]),t._v(" "),a("p",[t._v("workflow 文件的主体是"),a("code",[t._v("jobs")]),t._v("字段，表示要执行的一项或多项任务。")]),t._v(" "),a("p",[a("code",[t._v("jobs")]),t._v("字段里面，需要写出每一项任务的"),a("code",[t._v("job_id")]),t._v("，具体名称自定义。"),a("code",[t._v("job_id")]),t._v("里面的"),a("code",[t._v("name")]),t._v("字段是任务的说明。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("jobs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  my_first_job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" My first job\n  my_second_job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" My second job\n")])])])]),t._v(" "),a("p",[t._v("上面代码的"),a("code",[t._v("jobs")]),t._v("字段包含两项任务，"),a("code",[t._v("job_id")]),t._v("分别是"),a("code",[t._v("my_first_job")]),t._v("和"),a("code",[t._v("my_second_job")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("（5）"),a("code",[t._v("jobs.<job_id>.needs")])])]),t._v(" "),a("p",[a("code",[t._v("needs")]),t._v("字段指定当前任务的依赖关系，即运行顺序。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("jobs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  job1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  job2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    needs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" job1\n  job3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    needs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("job1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),a("p",[t._v("上面代码中，"),a("code",[t._v("job1")]),t._v("必须先于"),a("code",[t._v("job2")]),t._v("完成，而"),a("code",[t._v("job3")]),t._v("等待"),a("code",[t._v("job1")]),t._v("和"),a("code",[t._v("job2")]),t._v("的完成才能运行。因此，这个 workflow 的运行顺序依次为："),a("code",[t._v("job1")]),t._v("、"),a("code",[t._v("job2")]),t._v("、"),a("code",[t._v("job3")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("（6）"),a("code",[t._v("jobs.<job_id>.runs-on")])])]),t._v(" "),a("p",[a("code",[t._v("runs-on")]),t._v("字段指定运行所需要的虚拟机环境。它是必填字段。目前可用的虚拟机如下。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("code",[t._v("ubuntu-latest")]),t._v("，"),a("code",[t._v("ubuntu-18.04")]),t._v("或"),a("code",[t._v("ubuntu-16.04")])]),t._v(" "),a("li",[a("code",[t._v("windows-latest")]),t._v("，"),a("code",[t._v("windows-2019")]),t._v("或"),a("code",[t._v("windows-2016")])]),t._v(" "),a("li",[a("code",[t._v("macOS-latest")]),t._v("或"),a("code",[t._v("macOS-10.14")])])])]),t._v(" "),a("p",[t._v("下面代码指定虚拟机环境为"),a("code",[t._v("ubuntu-18.04")]),t._v("。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("runs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v("\n")])])])]),t._v(" "),a("p",[a("strong",[t._v("（7）"),a("code",[t._v("jobs.<job_id>.steps")])])]),t._v(" "),a("p",[a("code",[t._v("steps")]),t._v("字段指定每个 Job 的运行步骤，可以包含一个或多个步骤。每个步骤都可以指定以下三个字段。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("code",[t._v("jobs.<job_id>.steps.name")]),t._v("：步骤名称。")]),t._v(" "),a("li",[a("code",[t._v("jobs.<job_id>.steps.run")]),t._v("：该步骤运行的命令或者 action。")]),t._v(" "),a("li",[a("code",[t._v("jobs.<job_id>.steps.env")]),t._v("：该步骤所需的环境变量。")])])]),t._v(" "),a("p",[t._v("下面是一个完整的 workflow 文件的范例。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Greeting from Mona\non"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" push\n\njobs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  my"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" My Job\n    runs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("latest\n    steps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Print a greeting\n      env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MY_VAR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hi there"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" My name is\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIRST_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Mona\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIDDLE_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" The\n        "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LAST_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Octocat\n      run"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        echo $"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MY_VAR")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIRST_NAME")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MIDDLE_NAME")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LAST_NAME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])])]),t._v(" "),a("p",[t._v("上面代码中，"),a("code",[t._v("steps")]),t._v("字段只包括一个步骤。该步骤先注入四个环境变量，然后执行一条 Bash 命令")]),t._v(" "),a("h2",{attrs:{id:"实例-vuepress-项目发布到-github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-vuepress-项目发布到-github-pages"}},[t._v("#")]),t._v(" 实例：VuePress 项目发布到 GitHub Pages")]),t._v(" "),a("p",[t._v("第一步，在这个仓库的"),a("code",[t._v(".github/workflows")]),t._v("目录，生成一个 workflow 文件，名字可以随便取，这个示例是"),a("code",[t._v("gitee-repos-sync.yml")]),t._v("。")]),t._v(" "),a("blockquote",[a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Sync Github Repos To Gitee\n\non"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  push"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    branches"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" master\n\njobs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  build"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("and"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deploy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    runs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("latest\n    steps"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Checkout 🛎️\n      uses"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" actions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("checkout@v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Install and Build 🔧 # This example project is built using npm and outputs the result to the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build'")]),t._v(" folder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Replace "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" the commands required to build your project"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" or remove "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" step entirely "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" your site is pre"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("built"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n      run"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        npm install\n        npm run docs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("build\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Deploy 🚀\n      uses"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" JamesIves"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pages"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("deploy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("action@"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".4")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" pages # The branch the action should deploy to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        folder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" docs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dist # The folder the action should deploy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Sync Github Repos To Gitee  # 名字随便起\n      uses"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Yikun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hub"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mirror"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("action@v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  # 使用Yikun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hub"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("mirror"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("action\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" github"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wssf  # "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("源端账户名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        dst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gitee"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("wuyilong  # "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("目的端账户名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gitee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        dst_key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GITEE_PRIVATE_KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  # "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSH")]),t._v("密钥对中的私钥\n        dst_token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GITEE_TOKEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  # Gitee账户的私人令牌\n        account_type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" user  # 账户类型\n        clone_style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https"')]),t._v("  # 使用https方式进行clone，也可以使用ssh\n        debug"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  # 启用后会显示所有执行命令\n        force_update"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  # 启用后，强制同步，即强制覆盖目的端仓库\n        static_list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blog-docs"')]),t._v("  # 静态同步列表，在此填写需要同步的仓库名称，可填写多个\n        timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'600s'")]),t._v("  # git超时设置，超时后会自动重试git操作\n")])])])]),t._v(" "),a("p",[t._v("上面这个 workflow 文件的要点如下。")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("整个流程在"),a("code",[t._v("master")]),t._v("分支发生"),a("code",[t._v("push")]),t._v("事件时触发。")]),t._v(" "),a("li",[t._v("只有一个"),a("code",[t._v("job")]),t._v("，运行在虚拟机环境"),a("code",[t._v("ubuntu-latest")]),t._v("。")]),t._v(" "),a("li",[t._v("第一步是获取源码，使用的 action 是"),a("code",[t._v("actions/checkout")]),t._v("。")]),t._v(" "),a("li",[t._v("第二步是构建。")]),t._v(" "),a("li",[t._v("第三步是部署，使用的 action 是"),a("code",[t._v("JamesIves/github-pages-deploy-action")]),t._v("。")]),t._v(" "),a("li",[t._v("第三步需要四个环境变量，分别为 GitHub 密钥、发布分支、构建成果所在目录。其中，只有 GitHub 密钥是秘密变量，需要写在双括号里面，其他三个都可以直接写在文件里。")]),t._v(" "),a("li",[t._v("第三步是将GitHub仓库同步到gitee")])])]),t._v(" "),a("p",[t._v("第五步，保存上面的文件后，将整个仓库推送到 GitHub。")]),t._v(" "),a("p",[t._v("GitHub 发现了 workflow 文件以后，就会自动运行。你可以在网站上实时查看"),a("a",{attrs:{href:"https://github.com/ruanyf/github-actions-demo/commit/24fbf6a875351297f31434fd44bc3146accf9e59/checks",target:"_blank",rel:"noopener noreferrer"}},[t._v("运行日志"),a("OutboundLink")],1),t._v("，日志默认保存30天。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/wuyilong/picture-bed/raw/master/img/bg2019091108.jpg",alt:"img"}})]),t._v(" "),a("p",[t._v("等到 workflow 运行结束，访问 "),a("a",{attrs:{href:"https://ty-wssf.github.io/blog-docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Page"),a("OutboundLink")],1),t._v("，会看到构建成果已经发上网了。")])])}),[],!1,null,null,null);s.default=o.exports}}]);